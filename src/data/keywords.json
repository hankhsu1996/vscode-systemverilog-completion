{
    "source_text": {
        "library": [
            {
                "name": "library"
            },
            {
                "name": "incdir"
            },
            {
                "name": "include"
            }
        ],
        "systemverilog": [
            {
                "name": "module"
            },
            {
                "name": "macromodule"
            },
            {
                "name": "endmodule"
            },
            {
                "name": "extern"
            },
            {
                "name": "interface"
            },
            {
                "name": "endinterface"
            },
            {
                "name": "program"
            },
            {
                "name": "endprogram"
            },
            {
                "name": "checker"
            },
            {
                "name": "endchecker"
            },
            {
                "name": "virtual"
            },
            {
                "name": "class"
            },
            {
                "name": "extends"
            },
            {
                "name": "implements"
            },
            {
                "name": "endclass"
            },
            {
                "name": "pure"
            },
            {
                "name": "package"
            },
            {
                "name": "endpackage"
            },
            {
                "name": "timeunit"
            },
            {
                "name": "timeprecision"
            }
        ],
        "module_params_ports": [
            {
                "name": "type"
            },
            {
                "name": "input"
            },
            {
                "name": "output"
            },
            {
                "name": "inout"
            },
            {
                "name": "ref"
            },
            {
                "name": "interface"
            }
        ],
        "module_items": [
            {
                "name": "default"
            },
            {
                "name": "clocking"
            },
            {
                "name": "disable"
            },
            {
                "name": "iff"
            },
            {
                "name": "defparam"
            },
            {
                "name": "bind"
            }
        ],
        "config": [
            {
                "name": "config"
            },
            {
                "name": "endconfig"
            },
            {
                "name": "design"
            },
            {
                "name": "default"
            },
            {
                "name": "instance"
            },
            {
                "name": "cell"
            },
            {
                "name": "liblist"
            },
            {
                "name": "use"
            }
        ],
        "interface_items": [
            {
                "name": "extern"
            },
            {
                "name": "forkjoin"
            }
        ],
        "program_items": [],
        "checker_items": [
            {
                "name": "input"
            },
            {
                "name": "output"
            },
            {
                "name": "rand"
            },
            {
                "name": "default"
            },
            {
                "name": "clocking"
            },
            {
                "name": "disable"
            },
            {
                "name": "iff"
            }
        ],
        "class_items": [
            {
                "name": "const"
            },
            {
                "name": "pure"
            },
            {
                "name": "virtual"
            },
            {
                "name": "extern"
            },
            {
                "name": "function"
            },
            {
                "name": "endfunction"
            },
            {
                "name": "new"
            },
            {
                "name": "static"
            },
            {
                "name": "protected"
            },
            {
                "name": "local"
            },
            {
                "name": "rand"
            },
            {
                "name": "randc"
            },
            {
                "name": "super"
            }
        ],
        "constraints": [
            {
                "name": "static"
            },
            {
                "name": "constraint"
            },
            {
                "name": "solve"
            },
            {
                "name": "before"
            },
            {
                "name": "if"
            },
            {
                "name": "else"
            },
            {
                "name": "foreach"
            },
            {
                "name": "disable"
            },
            {
                "name": "soft"
            },
            {
                "name": "unique"
            },
            {
                "name": "extern"
            },
            {
                "name": "pure"
            }
        ],
        "package_items": [
            {
                "name": "program"
            },
            {
                "name": "endprogram"
            }
        ]
    },
    "declarations": {
        "decl_types": {
            "module_param_decl": [
                {
                    "name": "localparam"
                },
                {
                    "name": "parameter"
                },
                {
                    "name": "specparam"
                }
            ],
            "port_decl": [
                {
                    "name": "input"
                },
                {
                    "name": "output"
                },
                {
                    "name": "inout"
                },
                {
                    "name": "ref"
                }
            ],
            "type_decl": [
                {
                    "name": "const"
                },
                {
                    "name": "var"
                },
                {
                    "name": "import"
                },
                {
                    "name": "export"
                },
                {
                    "name": "genvar"
                },
                {
                    "name": "vectored"
                },
                {
                    "name": "scalared"
                },
                {
                    "name": "interconnect"
                },
                {
                    "name": "typedef"
                },
                {
                    "name": "enum"
                },
                {
                    "name": "struct"
                },
                {
                    "name": "union"
                },
                {
                    "name": "class"
                },
                {
                    "name": "interface"
                },
                {
                    "name": "nettype"
                },
                {
                    "name": "with"
                },
                {
                    "name": "static"
                },
                {
                    "name": "automatic"
                }
            ]
        },
        "decl_data_types": {
            "net_var_types": [
                {
                    "name": "string"
                },
                {
                    "name": "const"
                },
                {
                    "name": "packed"
                },
                {
                    "name": "enum"
                },
                {
                    "name": "chandle"
                },
                {
                    "name": "virtual"
                },
                {
                    "name": "interface"
                },
                {
                    "name": "event"
                },
                {
                    "name": "byte"
                },
                {
                    "name": "shortint"
                },
                {
                    "name": "int"
                },
                {
                    "name": "longint"
                },
                {
                    "name": "integer"
                },
                {
                    "name": "time"
                },
                {
                    "name": "bit"
                },
                {
                    "name": "logic"
                },
                {
                    "name": "reg"
                },
                {
                    "name": "shortreal"
                },
                {
                    "name": "real"
                },
                {
                    "name": "realtime"
                },
                {
                    "name": "supply0"
                },
                {
                    "name": "supply1"
                },
                {
                    "name": "tri"
                },
                {
                    "name": "tri0"
                },
                {
                    "name": "tri1"
                },
                {
                    "name": "triand"
                },
                {
                    "name": "trior"
                },
                {
                    "name": "trireg"
                },
                {
                    "name": "uwire"
                },
                {
                    "name": "wire"
                },
                {
                    "name": "wand"
                },
                {
                    "name": "wor"
                },
                {
                    "name": "interconnect"
                },
                {
                    "name": "var"
                },
                {
                    "name": "signed"
                },
                {
                    "name": "unsigned"
                },
                {
                    "name": "void"
                },
                {
                    "name": "struct"
                },
                {
                    "name": "union"
                },
                {
                    "name": "tagged"
                },
                {
                    "name": "type"
                }
            ],
            "strength": [
                {
                    "name": "supply0"
                },
                {
                    "name": "strong0"
                },
                {
                    "name": "pull0"
                },
                {
                    "name": "weak0"
                },
                {
                    "name": "supply1"
                },
                {
                    "name": "strong1"
                },
                {
                    "name": "pull1"
                },
                {
                    "name": "weak1"
                },
                {
                    "name": "highz0"
                },
                {
                    "name": "highz1"
                },
                {
                    "name": "small"
                },
                {
                    "name": "medium"
                },
                {
                    "name": "large"
                }
            ],
            "delays": []
        },
        "decl_lists": [],
        "decl_assignments": [
            {
                "name": "new"
            }
        ],
        "decl_range": [],
        "function_decl": [
            {
                "name": "function"
            },
            {
                "name": "endfunction"
            },
            {
                "name": "import"
            },
            {
                "name": "export"
            },
            {
                "name": "task"
            },
            {
                "name": "context"
            },
            {
                "name": "pure"
            }
        ],
        "task_decl": [
            {
                "name": "task"
            },
            {
                "name": "endtask"
            },
            {
                "name": "var"
            },
            {
                "name": "const"
            },
            {
                "name": "ref"
            }
        ],
        "block_item_decl": [],
        "interface_decl": [
            {
                "name": "modport"
            },
            {
                "name": "clocking"
            },
            {
                "name": "import"
            },
            {
                "name": "export"
            }
        ],
        "assertion_decl": [
            {
                "name": "assert"
            },
            {
                "name": "property"
            },
            {
                "name": "endproperty"
            },
            {
                "name": "cover"
            },
            {
                "name": "expect"
            },
            {
                "name": "sequence"
            },
            {
                "name": "endsequence"
            },
            {
                "name": "disable"
            },
            {
                "name": "iff"
            },
            {
                "name": "restrict"
            },
            {
                "name": "local"
            },
            {
                "name": "input"
            },
            {
                "name": "output"
            },
            {
                "name": "inout"
            },
            {
                "name": "strong"
            },
            {
                "name": "weak"
            },
            {
                "name": "not"
            },
            {
                "name": "or"
            },
            {
                "name": "and"
            },
            {
                "name": "if"
            },
            {
                "name": "else"
            },
            {
                "name": "case"
            },
            {
                "name": "endcase"
            },
            {
                "name": "nexttime"
            },
            {
                "name": "s_nexttime"
            },
            {
                "name": "always"
            },
            {
                "name": "s_always"
            },
            {
                "name": "s_eventually"
            },
            {
                "name": "eventually"
            },
            {
                "name": "until"
            },
            {
                "name": "until_with"
            },
            {
                "name": "s_until"
            },
            {
                "name": "s_until_with"
            },
            {
                "name": "implies"
            },
            {
                "name": "iff"
            },
            {
                "name": "accept_on"
            },
            {
                "name": "reject_on"
            },
            {
                "name": "sync_accept_on"
            },
            {
                "name": "sync_reject_on"
            },
            {
                "name": "default"
            },
            {
                "name": "untyped"
            },
            {
                "name": "intersect"
            },
            {
                "name": "first_match"
            },
            {
                "name": "throughout"
            },
            {
                "name": "within"
            },
            {
                "name": "dist"
            }
        ],
        "covergroup_decl": [
            {
                "name": "covergroup"
            },
            {
                "name": "endgroup"
            },
            {
                "name": "with"
            },
            {
                "name": "function"
            },
            {
                "name": "begin"
            },
            {
                "name": "end"
            },
            {
                "name": "or"
            },
            {
                "name": "coverpoint"
            },
            {
                "name": "iff"
            },
            {
                "name": "wildcard"
            },
            {
                "name": "default"
            },
            {
                "name": "sequence"
            },
            {
                "name": "bins"
            },
            {
                "name": "illegal_bins"
            },
            {
                "name": "ignore_bins"
            },
            {
                "name": "binsof"
            },
            {
                "name": "cross"
            },
            {
                "name": "matches"
            },
            {
                "name": "intersect"
            }
        ],
        "let_decl": [
            {
                "name": "let"
            },
            {
                "name": "untyped"
            }
        ]
    },
    "prim_insts": {
        "prim_inst": [
            {
                "name": "pulldown"
            },
            {
                "name": "pullup"
            }
        ],
        "prim_strengths": [],
        "prim_terminals": [],
        "prim_gate_switch": [
            {
                "name": "cmos"
            },
            {
                "name": "rcmos"
            },
            {
                "name": "bufif0"
            },
            {
                "name": "bufif1"
            },
            {
                "name": "notif0"
            },
            {
                "name": "notif1"
            },
            {
                "name": "nmos"
            },
            {
                "name": "pmos"
            },
            {
                "name": "rnmos"
            },
            {
                "name": "rpmos"
            },
            {
                "name": "and"
            },
            {
                "name": "nand"
            },
            {
                "name": "or"
            },
            {
                "name": "nor"
            },
            {
                "name": "xor"
            },
            {
                "name": "xnor"
            },
            {
                "name": "buf"
            },
            {
                "name": "not"
            },
            {
                "name": "tranif0"
            },
            {
                "name": "tranif1"
            },
            {
                "name": "rtranif0"
            },
            {
                "name": "rtranif1"
            },
            {
                "name": "tran"
            },
            {
                "name": "rtran"
            }
        ]
    },
    "instantiations": {
        "module_inst": [],
        "intf_inst": [],
        "prog_inst": [],
        "checker_inst": [],
        "gen_inst": [
            {
                "name": "generate"
            },
            {
                "name": "endgenerate"
            },
            {
                "name": "for"
            },
            {
                "name": "genvar"
            },
            {
                "name": "if"
            },
            {
                "name": "else"
            },
            {
                "name": "case"
            },
            {
                "name": "endcase"
            },
            {
                "name": "default"
            },
            {
                "name": "begin"
            },
            {
                "name": "end"
            }
        ]
    },
    "udp": {
        "udp_decl": [
            {
                "name": "primitive"
            },
            {
                "name": "endprimitive"
            },
            {
                "name": "extern"
            }
        ],
        "udp_ports": [
            {
                "name": "input"
            },
            {
                "name": "output"
            },
            {
                "name": "reg"
            }
        ],
        "udp_body": [
            {
                "name": "table"
            },
            {
                "name": "endtable"
            },
            {
                "name": "initial"
            }
        ],
        "udp_inst": []
    },
    "behavioral": {
        "cont_assign": [
            {
                "name": "assign"
            },
            {
                "name": "alias"
            }
        ],
        "procedural_block": [
            {
                "name": "initial"
            },
            {
                "name": "always"
            },
            {
                "name": "always_comb"
            },
            {
                "name": "always_ff"
            },
            {
                "name": "always_latch"
            },
            {
                "name": "final"
            },
            {
                "name": "assign"
            },
            {
                "name": "deassign"
            },
            {
                "name": "force"
            },
            {
                "name": "release"
            }
        ],
        "parallel_seq": [
            {
                "name": "else"
            },
            {
                "name": "begin"
            },
            {
                "name": "end"
            },
            {
                "name": "fork"
            },
            {
                "name": "join"
            },
            {
                "name": "join_any"
            },
            {
                "name": "join_none"
            }
        ],
        "statements": [],
        "timing_ctrl": [
            {
                "name": "repeat"
            },
            {
                "name": "iff"
            },
            {
                "name": "or"
            },
            {
                "name": "return"
            },
            {
                "name": "break"
            },
            {
                "name": "continue"
            },
            {
                "name": "wait"
            },
            {
                "name": "fork"
            },
            {
                "name": "wait_order"
            },
            {
                "name": "disable"
            }
        ],
        "cond_assignments": [
            {
                "name": "if"
            },
            {
                "name": "else"
            },
            {
                "name": "unique"
            },
            {
                "name": "unique0"
            },
            {
                "name": "priority"
            },
            {
                "name": "matches"
            }
        ],
        "case": [
            {
                "name": "case"
            },
            {
                "name": "casex"
            },
            {
                "name": "casez"
            },
            {
                "name": "endcase"
            },
            {
                "name": "matches"
            },
            {
                "name": "inside"
            },
            {
                "name": "default"
            },
            {
                "name": "randcase"
            }
        ],
        "patterns": [
            {
                "name": "tagged"
            },
            {
                "name": "default"
            }
        ],
        "looping": [
            {
                "name": "forever"
            },
            {
                "name": "repeat"
            },
            {
                "name": "while"
            },
            {
                "name": "for"
            },
            {
                "name": "do"
            },
            {
                "name": "foreach"
            },
            {
                "name": "var"
            }
        ],
        "subroutine_call": [
            {
                "name": "void"
            }
        ],
        "assertion": [
            {
                "name": "assert"
            },
            {
                "name": "assume"
            },
            {
                "name": "cover"
            },
            {
                "name": "final"
            }
        ],
        "clocking": [
            {
                "name": "default"
            },
            {
                "name": "clocking"
            },
            {
                "name": "endclocking"
            },
            {
                "name": "global"
            },
            {
                "name": "input"
            },
            {
                "name": "output"
            },
            {
                "name": "inout"
            }
        ],
        "randseq": [
            {
                "name": "randsequence"
            },
            {
                "name": "endsequence"
            },
            {
                "name": "rand"
            },
            {
                "name": "join"
            },
            {
                "name": "if"
            },
            {
                "name": "else"
            },
            {
                "name": "case"
            },
            {
                "name": "endcase"
            },
            {
                "name": "repeat"
            },
            {
                "name": "default"
            }
        ]
    },
    "specify": {
        "specify_block": [
            {
                "name": "specify"
            },
            {
                "name": "endspecify"
            },
            {
                "name": "pulsestyle_onevent"
            },
            {
                "name": "pulsestyle_ondetect"
            },
            {
                "name": "showcancelled"
            },
            {
                "name": "noshowcancelled"
            }
        ],
        "specify_path": [],
        "specify_block_terminals": [],
        "specify_path_delays": [
            {
                "name": "posedge"
            },
            {
                "name": "negedge"
            },
            {
                "name": "edge"
            },
            {
                "name": "if"
            },
            {
                "name": "ifnone"
            }
        ]
    },
    "expression": {
        "concat": [
            {
                "name": "with"
            }
        ],
        "subroutine_calls": [
            {
                "name": "with"
            },
            {
                "name": "null"
            },
            {
                "name": "unique"
            },
            {
                "name": "and"
            },
            {
                "name": "or"
            },
            {
                "name": "xor"
            }
        ],
        "expressions": [
            {
                "name": "tagged"
            },
            {
                "name": "inside"
            }
        ],
        "primaries": [
            {
                "name": "null"
            },
            {
                "name": "this"
            },
            {
                "name": "local"
            },
            {
                "name": "super"
            }
        ]
    }
}
